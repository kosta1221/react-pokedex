{"version":3,"sources":["utils.js","components/PokemonsOfTypeGrid.js","components/Pokemon.js","components/Suggestions.js","components/PokemonSection.js","components/CollectionSection.js","App.js","reportWebVitals.js","index.js"],"names":["URL","fetchPokemonData","data","setData","inputValue","setErrorMessage","a","console","log","pokemonData","isFetching","axios","method","url","headers","response","fetchPokemonNames","setAllPokemonNames","pokemonNames","results","map","pokemon","name","fetchPokemonTypes","type","setPokemonsOfType","pokemonsOfType","catchPokemon","myCollection","setMyCollection","length","fetchMyCollection","fetchedCollection","releaseFromCollection","pokemonId","capitalizeFirstLetter","string","charAt","toUpperCase","slice","PokemonsOfTypeGrid","handleGridClick","event","pokemonName","target","getAttribute","className","i","src","sprites","alt","onMouseEnter","onMouseLeave","onClick","Pokemon","handleTypeClick","pokemonDataDivs","key","Array","isArray","push","other","dream_world","Suggestions","suggestions","setInputValue","handleSuggestionClick","innerText","options","suggestion","PokemonSection","handleInputChange","searchSuggestions","searchButtonClickCount","setSearchButtonClickCount","id","onChange","placeholder","value","setPokemonData","CollectionSection","isCollectionDisplayed","setIscollectionDisplayed","viewCollectionButton","useRef","myCollectionDisplay","useEffect","current","style","display","handleRelease","ref","pokemonid","error","App","useState","errorMessage","setSearchSuggestions","allPokemonNames","height","weight","types","errorDiv","window","addEventListener","document","querySelector","filter","includes","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.32fa5d0c.chunk.js","sourcesContent":["import axios from \"axios\";\r\nconst URL = `/api`;\r\n\r\nexport const fetchPokemonData = async (data, setData, inputValue, setErrorMessage) => {\r\n\tconsole.log(\"trying to fetch...\");\r\n\tconsole.log(`${URL}/pokemon/${inputValue}`);\r\n\ttry {\r\n\t\tconsole.log(data);\r\n\t\tsetData({ pokemonData: data.pokemonData, isFetching: true });\r\n\t\tconst response = await axios({\r\n\t\t\tmethod: \"GET\",\r\n\t\t\turl: `${URL}/pokemon/${inputValue}`,\r\n\t\t\theaders: { \"Content-Type\": \"application/json\" },\r\n\t\t});\r\n\t\tsetData({ pokemonData: response.data, isFetching: false });\r\n\t} catch (e) {\r\n\t\tconsole.log(e.response.data);\r\n\t\tsetErrorMessage(e.response.data);\r\n\t\tsetData({ pokemonData: data.pokemonData, isFetching: false });\r\n\t}\r\n};\r\n\r\nexport const fetchPokemonNames = async (setAllPokemonNames, inputValue, setErrorMessage) => {\r\n\tconsole.log(\"trying to fetch names...\");\r\n\tconsole.log(`${URL}/pokemon/${inputValue}`);\r\n\ttry {\r\n\t\tconst response = await axios({\r\n\t\t\tmethod: \"GET\",\r\n\t\t\turl: `${URL}/pokemon/${inputValue}`,\r\n\t\t\theaders: { \"Content-Type\": \"application/json\" },\r\n\t\t});\r\n\t\tconst pokemonNames = response.data.results.map((pokemon) => pokemon.name);\r\n\t\tsetAllPokemonNames(pokemonNames);\r\n\t} catch (e) {\r\n\t\tconsole.log(e.response.data);\r\n\t\tsetErrorMessage(e.response.data);\r\n\t}\r\n};\r\n\r\nexport const fetchPokemonTypes = async (type, setPokemonsOfType, setErrorMessage) => {\r\n\tconsole.log(`trying to fetch ${type} types...`);\r\n\tconsole.log(`${URL}/type/${type}`);\r\n\ttry {\r\n\t\tconst response = await axios({\r\n\t\t\tmethod: \"GET\",\r\n\t\t\turl: `${URL}/type/${type}`,\r\n\t\t\theaders: { \"Content-Type\": \"application/json\" },\r\n\t\t});\r\n\t\tconst pokemonsOfType = response.data;\r\n\t\tconsole.log(response.data);\r\n\t\tsetPokemonsOfType(pokemonsOfType);\r\n\t} catch (e) {\r\n\t\tconsole.log(e.response.data);\r\n\t\tsetErrorMessage(e.response.data);\r\n\t}\r\n};\r\n\r\nexport const catchPokemon = async (pokemon, myCollection, setMyCollection, setErrorMessage) => {\r\n\tconsole.log(`trying to catch(post) ${pokemon.name}...`);\r\n\tconsole.log(`${URL}/collection/catch`);\r\n\ttry {\r\n\t\tconst response = await axios({\r\n\t\t\tmethod: \"POST\",\r\n\t\t\turl: `${URL}/collection/catch`,\r\n\t\t\theaders: { \"Content-Type\": \"application/json\" },\r\n\t\t\tdata: pokemon,\r\n\t\t});\r\n\t\tconsole.log(response.data[response.data.length - 1].name);\r\n\t\tconsole.log(response.data);\r\n\t\tsetMyCollection([...response.data]);\r\n\t} catch (e) {\r\n\t\tconsole.log(e.response.data);\r\n\t\tsetErrorMessage(e.response.data);\r\n\t}\r\n};\r\n\r\nexport const fetchMyCollection = async (myCollection, setMyCollection, setErrorMessage) => {\r\n\tconsole.log(`trying to fetch my collection...`);\r\n\tconsole.log(`${URL}/collection`);\r\n\ttry {\r\n\t\tconst response = await axios({\r\n\t\t\tmethod: \"GET\",\r\n\t\t\turl: `${URL}/collection`,\r\n\t\t\theaders: { \"Content-Type\": \"application/json\" },\r\n\t\t});\r\n\t\tconst fetchedCollection = response.data;\r\n\t\tconsole.log(response.data);\r\n\t\tsetMyCollection([...fetchedCollection]);\r\n\t} catch (e) {\r\n\t\tconsole.log(e.response.data);\r\n\t\tsetErrorMessage(e.response.data);\r\n\t}\r\n};\r\n\r\nexport const releaseFromCollection = async (pokemonId, setMyCollection, setErrorMessage) => {\r\n\tconsole.log(`trying to release pokemon id: ${pokemonId} from collection...`);\r\n\tconsole.log(`${URL}/collection/${pokemonId}`);\r\n\ttry {\r\n\t\tconst response = await axios({\r\n\t\t\tmethod: \"DELETE\",\r\n\t\t\turl: `${URL}/collection/${pokemonId}`,\r\n\t\t\theaders: { \"Content-Type\": \"application/json\" },\r\n\t\t});\r\n\r\n\t\tconst fetchedCollection = response.data;\r\n\t\tconsole.log(response.data);\r\n\t\tsetMyCollection([...fetchedCollection]);\r\n\t} catch (e) {\r\n\t\tconsole.log(e.response.data);\r\n\t\tsetErrorMessage(e.response.data);\r\n\t}\r\n};\r\n\r\nexport function capitalizeFirstLetter(string) {\r\n\treturn string.charAt(0).toUpperCase() + string.slice(1);\r\n}\r\n","import React from \"react\";\r\nimport { fetchPokemonData } from \"../utils\";\r\n\r\nfunction PokemonsOfTypeGrid({ pokemonsOfType, data, setData, setErrorMessage }) {\r\n\tconst handleGridClick = (event) => {\r\n\t\tconst pokemonName = event.target.getAttribute(\"name\");\r\n\t\tfetchPokemonData(data, setData, pokemonName, setErrorMessage);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"grid-container\">\r\n\t\t\t{pokemonsOfType.map((pokemon, i) => (\r\n\t\t\t\t<div className=\"card text-white bg-secondary\" key={`type-grid-pokemon-${i}`}>\r\n\t\t\t\t\t<span className=\"card-header\">{pokemon.name}</span>\r\n\t\t\t\t\t<img\r\n\t\t\t\t\t\tsrc={pokemon.sprites[\"front_default\"]}\r\n\t\t\t\t\t\talt=\"pokemon\"\r\n\t\t\t\t\t\tonMouseEnter={(event) => (event.target.src = pokemon.sprites[\"back_default\"])}\r\n\t\t\t\t\t\tonMouseLeave={(event) => (event.target.src = pokemon.sprites[\"front_default\"])}\r\n\t\t\t\t\t\tname={pokemon.name}\r\n\t\t\t\t\t\tonClick={handleGridClick}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t))}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default PokemonsOfTypeGrid;\r\n","import React from \"react\";\r\nimport { fetchPokemonTypes, capitalizeFirstLetter } from \"../utils.js\";\r\n\r\nfunction Pokemon({ pokemonData, setPokemonsOfType, isFetching, setErrorMessage }) {\r\n\tconst handleTypeClick = (event) => {\r\n\t\tconst type = event.target.getAttribute(\"type\");\r\n\t\tconsole.log(type);\r\n\t\tfetchPokemonTypes(type, setPokemonsOfType, setErrorMessage);\r\n\t};\r\n\r\n\tconst pokemonDataDivs = [];\r\n\tfor (const key in pokemonData) {\r\n\t\tif (key === \"sprites\" || key === \"id\") continue;\r\n\r\n\t\tif (Array.isArray(pokemonData[key]) && key === \"types\") {\r\n\t\t\tpokemonDataDivs.push(\r\n\t\t\t\t<div key={key} className=\"pokemon-data-div\">\r\n\t\t\t\t\t<span>{`${capitalizeFirstLetter(key)}: `}</span>\r\n\t\t\t\t\t{pokemonData[key].map((type, i) => {\r\n\t\t\t\t\t\tif (pokemonData[key].length - 1 === i) {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\tclassName=\"btn btn-outline-primary\"\r\n\t\t\t\t\t\t\t\t\tkey={`type-${i}`}\r\n\t\t\t\t\t\t\t\t\ttype={type}\r\n\t\t\t\t\t\t\t\t\tonClick={handleTypeClick}\r\n\t\t\t\t\t\t\t\t>{`${type}`}</span>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t/* can add something to all spans which aren't the last one (like a comma) */\r\n\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\tclassName=\"btn btn-outline-primary\"\r\n\t\t\t\t\t\t\t\tkey={`type-${i}`}\r\n\t\t\t\t\t\t\t\ttype={type}\r\n\t\t\t\t\t\t\t\tonClick={handleTypeClick}\r\n\t\t\t\t\t\t\t>{`${type}`}</span>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\r\n\t\t\tcontinue;\r\n\t\t}\r\n\r\n\t\tpokemonDataDivs.push(\r\n\t\t\t<div key={key} className=\"pokemon-data-div\">\r\n\t\t\t\t<span>{`${capitalizeFirstLetter(key)}: `}</span>\r\n\t\t\t\t<span>{pokemonData[key]}</span>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className=\"pokemon-data-except-big-artwork\">\r\n\t\t\t\t<div>{pokemonDataDivs}</div>\r\n\r\n\t\t\t\t<img\r\n\t\t\t\t\tsrc={pokemonData.sprites[\"front_default\"]}\r\n\t\t\t\t\talt=\"pokemon\"\r\n\t\t\t\t\tonMouseEnter={(event) => (event.target.src = pokemonData.sprites[\"back_default\"])}\r\n\t\t\t\t\tonMouseLeave={(event) => (event.target.src = pokemonData.sprites[\"front_default\"])}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\r\n\t\t\t<img\r\n\t\t\t\tclassName=\"big-artwork\"\r\n\t\t\t\tsrc={pokemonData.sprites.other.dream_world[\"front_default\"]}\r\n\t\t\t\talt=\"pokemon-banner\"\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Pokemon;\r\n","import React from \"react\";\r\n\r\nconst Suggestions = ({ suggestions, setInputValue }) => {\r\n\tconst handleSuggestionClick = (event) => {\r\n\t\tsetInputValue(event.target.innerText);\r\n\t};\r\n\r\n\tconst options = suggestions.map((suggestion, i) => (\r\n\t\t<div className=\"suggestion\" key={`suggestion-${i}`} onClick={handleSuggestionClick}>\r\n\t\t\t{suggestion}\r\n\t\t</div>\r\n\t));\r\n\treturn <div className=\"suggestions\">{options}</div>;\r\n};\r\n\r\nexport default Suggestions;\r\n","import React from \"react\";\r\nimport Pokemon from \"../components/Pokemon\";\r\nimport Suggestions from \"../components/Suggestions\";\r\n\r\nfunction PokemonSection({\r\n\tdata,\r\n\tsetData,\r\n\tinputValue,\r\n\thandleInputChange,\r\n\tsearchSuggestions,\r\n\tsearchButtonClickCount,\r\n\tsetSearchButtonClickCount,\r\n\tsetInputValue,\r\n\tpokemonsOfType,\r\n\tsetPokemonsOfType,\r\n\tsetErrorMessage,\r\n}) {\r\n\treturn (\r\n\t\t<section className=\"pokemon-section\">\r\n\t\t\t<h1 className=\"main-header\">Pokedex</h1>\r\n\t\t\t<div className=\"autocomplete\">\r\n\t\t\t\t<input\r\n\t\t\t\t\tid=\"search-input\"\r\n\t\t\t\t\tonChange={handleInputChange}\r\n\t\t\t\t\tplaceholder=\"pikachu...\"\r\n\t\t\t\t\tvalue={inputValue}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<button\r\n\t\t\t\t\tid=\"search-button\"\r\n\t\t\t\t\tonClick={() => setSearchButtonClickCount(searchButtonClickCount + 1)}\r\n\t\t\t\t>\r\n\t\t\t\t\t🔍\r\n\t\t\t\t</button>\r\n\r\n\t\t\t\t<Suggestions\r\n\t\t\t\t\tid=\"search-suggestions\"\r\n\t\t\t\t\tsuggestions={searchSuggestions}\r\n\t\t\t\t\tsetInputValue={setInputValue}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\r\n\t\t\t<Pokemon\r\n\t\t\t\tpokemonData={data.pokemonData}\r\n\t\t\t\tisFetching={data.isFetching}\r\n\t\t\t\tsetPokemonData={setData}\r\n\t\t\t\tpokemonsOfType={pokemonsOfType}\r\n\t\t\t\tsetPokemonsOfType={setPokemonsOfType}\r\n\t\t\t\tsetErrorMessage={setErrorMessage}\r\n\t\t\t/>\r\n\t\t</section>\r\n\t);\r\n}\r\n\r\nexport default PokemonSection;\r\n","import React from \"react\";\r\nimport { catchPokemon, fetchMyCollection, releaseFromCollection } from \"../utils\";\r\nimport { useEffect, useRef } from \"react\";\r\n\r\nfunction CollectionSection({\r\n\tdata,\r\n\tsetData,\r\n\tmyCollection,\r\n\tsetMyCollection,\r\n\tsetErrorMessage,\r\n\tisCollectionDisplayed,\r\n\tsetIscollectionDisplayed,\r\n}) {\r\n\tconst viewCollectionButton = useRef(null);\r\n\tconsole.log(viewCollectionButton);\r\n\r\n\tconst myCollectionDisplay = useRef(null);\r\n\tconsole.log(myCollectionDisplay);\r\n\r\n\tuseEffect(() => {\r\n\t\tfetchMyCollection(myCollection, setMyCollection, setErrorMessage);\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (isCollectionDisplayed) {\r\n\t\t\tmyCollectionDisplay.current.style.display = \"grid\";\r\n\t\t\tviewCollectionButton.current.innerText = \"Hide My Collection\";\r\n\t\t} else {\r\n\t\t\tmyCollectionDisplay.current.style.display = \"none\";\r\n\t\t\tviewCollectionButton.current.innerText = \"View My Collection\";\r\n\t\t}\r\n\t}, [isCollectionDisplayed]);\r\n\r\n\tconst pokemonData = data.pokemonData;\r\n\r\n\tconst handleCatch = (event) => {\r\n\t\tconsole.log(pokemonData);\r\n\t\tcatchPokemon(pokemonData, myCollection, setMyCollection, setErrorMessage);\r\n\t};\r\n\r\n\tconst handleViewCollection = (event) => {\r\n\t\tconsole.log(myCollection);\r\n\t\ttry {\r\n\t\t\tfetchMyCollection(myCollection, setMyCollection, setErrorMessage);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t\tthrow error;\r\n\t\t}\r\n\r\n\t\tsetIscollectionDisplayed(!isCollectionDisplayed);\r\n\t};\r\n\r\n\tconst handleRelease = (event) => {\r\n\t\tconst pokemonId = event.target.getAttribute(\"pokemonid\");\r\n\t\tconsole.log(pokemonId);\r\n\t\treleaseFromCollection(pokemonId, setMyCollection, setErrorMessage);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"collection-section\">\r\n\t\t\t<div ref={myCollectionDisplay} className=\"my-collection\">\r\n\t\t\t\t{myCollection.map((pokemon, i) => (\r\n\t\t\t\t\t<div className=\"card text-white bg-primary\" key={`collection-pokemon-${i}`}>\r\n\t\t\t\t\t\t<span className=\"card-header\">{pokemon.name}</span>\r\n\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\tsrc={pokemon.sprites[\"front_default\"]}\r\n\t\t\t\t\t\t\talt=\"pokemon\"\r\n\t\t\t\t\t\t\tonMouseEnter={(event) => (event.target.src = pokemon.sprites[\"back_default\"])}\r\n\t\t\t\t\t\t\tonMouseLeave={(event) => (event.target.src = pokemon.sprites[\"front_default\"])}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<button className=\"btn btn-warning\" pokemonid={pokemon.id} onClick={handleRelease}>\r\n\t\t\t\t\t\t\tRelease\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t\t<button ref={viewCollectionButton} className=\"btn btn-primary\" onClick={handleViewCollection}>\r\n\t\t\t\tView My Collection\r\n\t\t\t</button>\r\n\t\t\t<button className=\"btn btn-primary\" onClick={handleCatch}>\r\n\t\t\t\tCatch\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default CollectionSection;\r\n","import \"./styles/App.css\";\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { fetchPokemonData, fetchPokemonNames } from \"./utils.js\";\n\nimport PokemonsOfTypeGrid from \"./components/PokemonsOfTypeGrid\";\nimport PokemonSection from \"./components/PokemonSection\";\nimport CollectionSection from \"./components/CollectionSection\";\n\nfunction App() {\n\tconst mockPokemonData = {\n\t\tid: null,\n\t\tname: \"\",\n\t\theight: null,\n\t\tweight: null,\n\t\ttypes: [],\n\t\tsprites: {\n\t\t\tother: {\n\t\t\t\tdream_world: {},\n\t\t\t},\n\t\t},\n\t};\n\tconst [isCollectionDisplayed, setIscollectionDisplayed] = useState(false);\n\tconst [errorMessage, setErrorMessage] = useState(\"\");\n\tconst [searchSuggestions, setSearchSuggestions] = useState([]);\n\tconst [allPokemonNames, setAllPokemonNames] = useState([]);\n\tconst [inputValue, setInputValue] = useState(\"pikachu\");\n\tconst [searchButtonClickCount, setSearchButtonClickCount] = useState(0);\n\tconst [data, setData] = useState({\n\t\tpokemonData: mockPokemonData,\n\t\tisFetching: false,\n\t});\n\tconst [pokemonsOfType, setPokemonsOfType] = useState([]);\n\tconst [myCollection, setMyCollection] = useState([]);\n\n\tconst errorDiv = useRef(null);\n\tconsole.log(errorDiv);\n\n\tuseEffect(() => {\n\t\tif (errorMessage === \"\") {\n\t\t\terrorDiv.current.style.display = \"none\";\n\t\t} else {\n\t\t\terrorDiv.current.style.display = \"block\";\n\t\t}\n\t}, [errorMessage]);\n\n\tuseEffect(() => {\n\t\tfetchPokemonNames(setAllPokemonNames, `limit=800`, setErrorMessage);\n\n\t\t/* Event listener for closing suggestion list when clicking anywhere, and resetting error message */\n\t\twindow.addEventListener(\"click\", function (event) {\n\t\t\tdocument.querySelector(\".suggestions\").style.display = \"none\";\n\t\t\tsetErrorMessage(\"\");\n\t\t});\n\t}, []);\n\n\tuseEffect(() => {\n\t\tfetchPokemonData(data, setData, inputValue, setErrorMessage);\n\t}, [searchButtonClickCount]);\n\n\tuseEffect(() => {\n\t\tconsole.log(inputValue);\n\t\tconst searchSuggestions = allPokemonNames.filter((pokemonName) =>\n\t\t\tpokemonName.includes(inputValue)\n\t\t);\n\t\tsetSearchSuggestions(searchSuggestions);\n\t}, [inputValue]);\n\n\tconst handleInputChange = (event) => {\n\t\tsetInputValue(event.target.value);\n\t\t/* If suggestions are not displayed, display them when typing in the input */\n\t\tdocument.querySelector(\".suggestions\").style.display = \"block\";\n\t};\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<div className=\"pokemon-and-collection\">\n\t\t\t\t<PokemonSection\n\t\t\t\t\tdata={data}\n\t\t\t\t\tsetData={setData}\n\t\t\t\t\tinputValue={inputValue}\n\t\t\t\t\thandleInputChange={handleInputChange}\n\t\t\t\t\tsearchSuggestions={searchSuggestions}\n\t\t\t\t\tsearchButtonClickCount={searchButtonClickCount}\n\t\t\t\t\tsetSearchButtonClickCount={setSearchButtonClickCount}\n\t\t\t\t\tsetInputValue={setInputValue}\n\t\t\t\t\tpokemonsOfType={pokemonsOfType}\n\t\t\t\t\tsetPokemonsOfType={setPokemonsOfType}\n\t\t\t\t\tsetErrorMessage={setErrorMessage}\n\t\t\t\t/>\n\t\t\t\t<CollectionSection\n\t\t\t\t\tdata={data}\n\t\t\t\t\tsetData={setData}\n\t\t\t\t\tmyCollection={myCollection}\n\t\t\t\t\tsetMyCollection={setMyCollection}\n\t\t\t\t\tsetErrorMessage={setErrorMessage}\n\t\t\t\t\tisCollectionDisplayed={isCollectionDisplayed}\n\t\t\t\t\tsetIscollectionDisplayed={setIscollectionDisplayed}\n\t\t\t\t/>\n\t\t\t</div>\n\n\t\t\t<div ref={errorDiv} className=\"alert alert-danger alert-dismissible fade show\">\n\t\t\t\t{errorMessage}\n\t\t\t</div>\n\n\t\t\t<PokemonsOfTypeGrid\n\t\t\t\tpokemonsOfType={pokemonsOfType}\n\t\t\t\tdata={data}\n\t\t\t\tsetData={setData}\n\t\t\t\tsetErrorMessage={setErrorMessage}\n\t\t\t/>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\r\n\tif (onPerfEntry && onPerfEntry instanceof Function) {\r\n\t\timport(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n\t\t\tgetCLS(onPerfEntry);\r\n\t\t\tgetFID(onPerfEntry);\r\n\t\t\tgetFCP(onPerfEntry);\r\n\t\t\tgetLCP(onPerfEntry);\r\n\t\t\tgetTTFB(onPerfEntry);\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}